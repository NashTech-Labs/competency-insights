name: GCP CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: '${{ secrets.GKE_PROJECT }}'
  SERVICE_ACCOUNT_KEY: '${{ secrets.SERVICE_ACCOUNT_KEY }}'
  CLUSTER_NAME: competency-insights-cluster
  REGION: us-east1
  REGISTRY_NAME: competency-insights

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
      - name: Read service names from file
        id: read-service-names
        run: |
          SERVICE_NAMES=$(cat projects-changes-deploy.txt)
          echo "Service Names: $SERVICE_NAMES"
          echo "::set-output name=service_names::$SERVICE_NAMES"
      - name: SonarCloud Scan
        run: |
           for SERVICE_NAME in $(echo ${{ steps.read-service-names.outputs.service_names }} | tr ',' ' '); do
            echo "Processing Service: $SERVICE_NAME"
            #ls -al
            cd $SERVICE_NAME
            #pwd
            # Check if it's the ReactJS project
            if [ "$SERVICE_NAME" == "competency-insights-ui" ]; then
              # ReactJS-specific commands
              npm install
          
              # Run tests and generate code coverage reports (replace with your test command)
              npm test -- --coverage
          
              # Install SonarScanner for Node.js
              npm install -g sonarqube-scanner
          
              # Run SonarScanner for Node.js
              sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=nashtech -Dsonar.branch.name=main
            else
              # Maven Sonar
               echo "Processing MVN service: $SERVICE_NAME"
              mvn clean verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=nashtech -Dsonar.branch.name=main
            fi
           done 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
